package commands;

import java.util.ArrayList;

import exceptions.InvalidParamLengthException;
import system.FileSystem;

/**
 * Commands that the user can use in Shell.
 * 
 */
public abstract class Command {
  /** 
   * The name of the command.
   */
  private String name;

  /** 
   * The arguments of the command.
   */
  private ArrayList<String> arguments;

  /** 
   * The documentation of the command.
   */
  private String docs;

    
  /**
   * Executes the command with the given arguments on the FileSystem fs. 
   * If the parameter length is invalid, InvalidParamLengthException is thrown.
   * @param fs
   * @param arguments
   * @throws InvalidParamLengthException
   */
  public abstract void executeCommand(FileSystem fs, ArrayList<String> arguments) 
      throws InvalidParamLengthException;

    
  /** 
   * Sets this Command's docs to the value of docs.
   * @param docs
   */
  public void setDocs(String docs) {
    this.docs = docs;
  }

    
  /** 
  * Returns the value of this Command's docs
   * @return String
   */
  public String getDocs() {
    return docs;
  }

    
  /** 
   * Returns the value of this Command's name
   * @return String
   */
  public String getName() {
    return name;
  }

    
  /** 
   * Sets this Command's name to the value of name
   * @param name
   */
  protected void setName(String name){
    this.name = name;
  }

    
  /** 
   * Sets this Command's arguments to the value of arguments
   * @param arguments
   */
  protected void setArguments(ArrayList<String> arguments) {
    this.arguments = arguments;
  }

    
  /** 
   * Returns the value of this Command's arguments
   * @return ArrayList<String>
   */
  protected ArrayList<String> getArguments() {
    return this.arguments;
  }

}
