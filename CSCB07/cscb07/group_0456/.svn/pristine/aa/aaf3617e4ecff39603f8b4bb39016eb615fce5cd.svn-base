package commands;

import java.util.ArrayList;

import javax.naming.InvalidNameException;

import exceptions.AlreadyExistsException;
import exceptions.InvalidParamLengthException;
import exceptions.InvalidPathException;
import system.FileSystem;

/**
 * Command for printing input String to Shell or overwriting the contents of the given 
 * file with input String or appending the given Sting to the given file.
 * 
 */
public class Echo extends Command {
  public Echo() {
    this.setName("echo");
    this.setDocs("echo STRING [> OUTFILE]\n\tIf OUTFILE is not provided, print STRING in shell."
        + "\n\tOtherwise, overwrites content of file OUTFILE with STRING."
        + "\n\tCreates OUTFILE if it does not already exist."
        + "\n\tSTRING is a string of characters surrounded by double quotation marks.");
  }

  /**
   * If the argument(s) given by user is a valid String, String surrounded by quotation marks 
   * and no quotation mark inside String, prints this String without quotation marks to 
   * console. if the user gives a valid String and specifier ">" followed by a valid path of
   * a file, the relative or absolute path of a existing file or the relative or absolute 
   * path of a non-existing but is able to create, overwrites this file with given String
   * without quotation marks. If the user gives a valid String and specifier ">>" followed 
   * by a valid path of a file, appends the String without quotation marks to this file.
   * AlreadyExistsException is thrown if file to create already exist.
   * IllegalArgumentException is thrown if the given String is invalid.
   * InvalidParamLengthException is thrown if the length of arguments is zero or two.
   * InvalidPathException is thrown if the given path is invalid.
   * 
   * @param fs the FileSystem associated with the shell this command is running in
   * @param arguments the list of arguments provided by the user 
   * @throws AlreadyExistsException
   * @throws IllegalArgumentException
   * @throws InvalidParamLengthException
   * @throws InvalidPathException
   */
  public void executeCommand(FileSystem fs, ArrayList<String> arguments) throws InvalidParamLengthException {

    int size = arguments.size();
    
    if (size == 0 || size == 2 || size > 3) {
      throw new InvalidParamLengthException("Invalid parameter length");
    }

    String text = arguments.get(0);
    try {
      if (!isString(text)) {
        throw new IllegalArgumentException(text + " is not a valid String!");
      }
      text = text.substring(1, text.length() - 1);

      if (size == 1) {
        System.out.println(text);
      } else{
          String path = arguments.get(2);
          fs.redirect(arguments.get(1), text, path);

    }
    } catch (InvalidNameException | InvalidPathException | AlreadyExistsException| 
      IllegalArgumentException e) {
      System.err.println(e.getMessage());
    }
  }

  /**
   * Returns true if this text starts with "\"", ends with "\"", and doesn't contain "\""
   * in middle. Otherwise return false.
   * 
   * @param text the String to be determined if it is a valid String
   * @return arguments the list of arguments provided by the user 
   */
  private Boolean isString(String text) {
    String subString;

    if (text.startsWith("\"") && text.endsWith("\"")) {
      subString = text.substring(1, text.length() - 1);
      if (subString.contains("\"")) {
        return false;
      }
      return true;
    }
    return false;
  }

}
