package system;

import java.util.ArrayList;
import java.util.Arrays;

public class Path {
    private ArrayList<String> location;

    public Path(String path) {

        String reg = "(?<=[^/])(/)(?=[^/]*)|(^/)";

        location = new ArrayList<String>(Arrays.asList(path.split(reg)));

        // empty string represents root
        if (location.isEmpty()) {
            location.add("");
        }

        // if the array list only has one word, then we're looking in current directory
        if (location.size() == 1 && !(location.get(0).isBlank())) {
            location.add(0, ".");
        }

    }

    public String getPath() {
        String completePath = "";
        for (String dir : location) {
            completePath += dir + "/";
        }

        completePath = completePath.substring(0, completePath.length() - 1);

        return completePath;
    }

    public Path getParentPath() {
        String parentPath = "";
        for (int i = 0; i < location.size() - 1; i++) {
            parentPath += location.get(i) + "/";
        }

        return new Path(parentPath);
    }

    public ArrayList<String> getList() {
        return location;
    }

    public String getLastElement() {
        return location.get(location.size() - 1);
    }

}
