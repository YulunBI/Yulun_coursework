package system;

import java.util.ArrayList;

public class Directory {

  private Directory superDirectory;
  private ArrayList<Directory> subDirectory;
  private ArrayList<File> subFile;
  private String name;
  private Path location;
  private static final String FORB_CHAR = ".*[/.!@#$%^&*(){}~|<>?].*";

  public Directory(String name, Path location, Directory superDirectory) {
    this.superDirectory = superDirectory;
    subDirectory = new ArrayList<Directory>();
    subFile = new ArrayList<File>();
    this.name = name;
    this.location = location;
  }

  public String getName() {
    return name;
  }

  public ArrayList<Directory> getChildren() {
    return subDirectory;
  }

  public ArrayList<File> getFile() {
    return subFile;
  }

  public void addSubDictionary(String subDictName) throws Exception {
    checkForInvalidName(subDictName);
    checkForDuplicates(subDictName);
    subDirectory.add(new Directory(subDictName, new Path(location.getPath() + subDictName), this));
  }

  public void addSubFile(String subFileName) throws Exception {
    checkForInvalidName(subFileName);
    checkForDuplicates(subFileName);
    subFile.add(new File(subFileName, location.getPath()));
  }

  public Directory getParent() {
    return superDirectory;
  }

  public String getPath() {
    return location.getPath();
  }

  private void checkForDuplicates(String name) throws Exception {
    // change to InvalidNameException
    for (Directory d : subDirectory) {
      if (d.getName().equals(name)) {
        throw new Exception("Directory with the name " + name + " already exists.");
      }
    }
    for (File f : subFile) {
      if (f.getName().equals(name)) {
        throw new Exception("File with the name " + name + " already exists.");
      }
    }
  }

  private void checkForInvalidName(String name) throws Exception {

    if (name.matches(FORB_CHAR)) {
      // Change to InvalidNameException
      throw new Exception(name + " is an invalid name.");
    }

  }
}
